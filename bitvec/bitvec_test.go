package bitvec_test

import (
	bitvec2 "4420project/bitvec"
	"fmt"
	"github.com/DmitriyVTitov/size"
	"math"
	"testing"
)

func TestNewBasicBitVec(t *testing.T) {
	bitArr := bitvec2.NewBitArrBySize(int(math.Pow(2, 20)))
	bitvec := bitvec2.NewBasicBitVec(bitArr)
	fmt.Println(size.Of(bitvec))
	fmt.Println(size.Of(bitArr))
}

func TestBasicBitVec(t *testing.T) {
	str
	bitvec, _ := bitvec2.NewBasicBitVecFromString(str)
	bitArr, _ := bitvec2.NewBitArr(str)
	for i := 0; i < len(str); i++ {
		r1 := bitvec.Rank1(i)
		r2 := bitArr.Rank1(i)
		if r1 != r2 {
			t.Error("w")
		}
	}
}
